# --------------------------------------------------------------------------
# Class definition of WebThread - this thread controls the REST API
#
# Author: Benjamin Fuchs
# License: GPL3
#
# Website: https://github.com/bablokb/nerd-alarmclock
#
# --------------------------------------------------------------------------

from threading import Thread

class WebThread(Thread):
  """ Web thread """

  # constants   ------------------------------------------------------------

  PORT  = 5000

  # initialize object   ----------------------------------------------------

  def __init__(self, settings):
    """ Constructor """

    super(WebThread,self).__init__(name="WebThread")
    self._settings = settings
    self._stop_event = settings.stop_event
    self._app = Flask("WebThread")
    self._app.add_url_rule("/time", view_func=TimeView.as_view('time',self._settings))
    self._app.add_url_rule("/shutdown", view_func=ShutdownView.as_view('shutdown', self.settings))

  def run(self):
    """ run-method of thread """

    self._settings.log.msg("WebThread: running WebThread")
    flaskThread = FlaskThread(self._app, WebThread.PORT)
    flaskThread.start()
    while not self._stop_event.wait(0.5):
        True
    response = requests.post('http://localhost:' + WebThread.PORT + '/shutdown', json='{}')
    if response.status_code != 200:
       self._settings.log.msg("WebThread: Error shutting down server.")
    self._settings.log.msg("WebThread: terminating WebThread")
