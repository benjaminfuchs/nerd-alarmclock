#!/usr/bin/python3
# --------------------------------------------------------------------------
# Class definition of SRF02
#
# Author: Benjamin Fuchs
# License: GPL3
#
# Website: https://github.com/benjaminfuchs/who_disposer
#
# --------------------------------------------------------------------------

import datetime
import smbus
import time
from threading import Thread

class SRF02(Thread):
    """ Sensor class """

    def __init__(self, address):
        """ Constructor """
        super(SRF02, self).__init__(name="SRF02")

        self._i2c = smbus.SMBus(1)
        self._address = 0x70
        self._i2c.write_byte_data(self._address, 0, 96)
        self._distance = 255
        self._run = True

    def run(self):
        """ get current distance """
        while self._run:
            self._i2c.write_byte_data(self._address, 0, 81)
            time.sleep(0.07)
            distance = self._i2c.read_word_data(self._address, 2) / 255
            time.sleep(0.07)
            self._distance = distance
            time.sleep(0.1)


    def stop(self):
        self._run = False

    def distance(self):
        """ get current distance """
        return self._distance