#!/usr/bin/python3
# --------------------------------------------------------------------------
# Class definition of Button
#
# Author: Benjamin Fuchs
# License: GPL3
#
# Website: https://github.com/benjaminfuchs/who_disposer
#
# --------------------------------------------------------------------------

import RPi.GPIO as GPIO
import time
from threading import Thread

class Button(Thread):
    """ Button class """

    def __init__(self, pin):
        """ Constructor """
        super(Button, self).__init__(name="Button")

        self._pin = pin
        self._listeners = []
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(self._pin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
        self._run = True

    def add_listener(self, function):
        self._listeners.append(function)

    def run(self):
        """ set status of button """
        state = "off"
        while self._run:
            if state == "off" and not(bool(GPIO.input(self._pin))):
                state = "on"
                for listener in self._listeners:
                    listener(state)
            elif state == "on" and bool(GPIO.input(self._pin)):
                state = "off"
                for listener in self._listeners:
                    listener(state)
            time.sleep(0.01)

    def stop(self):
        self._run = False
