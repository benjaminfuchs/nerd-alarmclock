#!/usr/bin/python3
# --------------------------------------------------------------------------
# Class definition of HCSR04
#
# Author: Benjamin Fuchs
# License: GPL3
#
# Website: https://github.com/benjaminfuchs/who_disposer
#
# --------------------------------------------------------------------------

import datetime
import RPi.GPIO as GPIO
import time
from threading import Thread

class HCSR501(Thread):
    """ Sensor class """

    def __init__(self, pin_in):
        """ Constructor """
        super(HCSR501, self).__init__(name="HCSR501")

        self._pin_in = pin_in
        self._listeners = []

        GPIO.setmode(GPIO.BCM)
        GPIO.setup(self._pin_in, GPIO.IN)
        self._run = True

    def add_listener(self, function):
        self._listeners.append(function)

    def run(self):
        state = "off"
        while self._run:
            if state == "off" and GPIO.input(self._pin_in) == 1:
                state = "on"
                for listener in self._listeners:
                        listener(state)
            elif state == "on" and GPIO.input(self._pin_in) == 0:
                state = "off"
                for listener in self._listeners:
                    listener(state)
            time.sleep(0.01)

    def stop(self):
        self._run = False

    def calibrate(self):
        pass